<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon&#39;s Blog</title>
  
  <subtitle>Simon&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nsleep.github.io/"/>
  <updated>2018-05-17T06:15:44.245Z</updated>
  <id>http://nsleep.github.io/</id>
  
  <author>
    <name>Simon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>服务器安防之登陆次数限制</title>
    <link href="http://nsleep.github.io/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8B%E7%99%BB%E9%99%86%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/"/>
    <id>http://nsleep.github.io/服务器安防之登陆次数限制/</id>
    <published>2018-05-17T01:05:42.000Z</published>
    <updated>2018-05-17T06:15:44.245Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记"><a href="#记" class="headerlink" title="记"></a>记</h1><p>继上次爆破防御后，依然有陌生IP骚扰，百无聊赖，以作此篇；</p><hr><h1 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h1><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></p><hr><h1 id="1-始终允许IP"><a href="#1-始终允许IP" class="headerlink" title="1. 始终允许IP"></a>1. 始终允许IP</h1><p>假设IP：192.168.18.1 是经常登录的IP，填入 /etc/hosts.allow ，当然 :allow 是可以省略的。当hosts.allow和host.deny相冲突时, 以hosts.allow设置为准</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:192.168.18.1:allow"</span> &gt;&gt; /etc/hosts.allow</span><br></pre></td></tr></table></figure><hr><h1 id="2-写脚本"><a href="#2-写脚本" class="headerlink" title="2. 写脚本"></a>2. 写脚本</h1><p>在路径 ‘/usr/local/bin/‘ 下，创建文件 ‘secure_ssh.sh’ ，<br>错误次数大于个位数，即错误次数大于等于10就将IP列入黑名单(判断见行7)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/secure|awk <span class="string">'/Failed/&#123;print $(NF-3)&#125;'</span>|sort|uniq -c|awk <span class="string">'&#123;print $2"="$1;&#125;'</span> &gt; /usr/<span class="built_in">local</span>/bin/black.list</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat  /usr/<span class="built_in">local</span>/bin/black.list`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  IP=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">  NUM=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;#NUM&#125;</span> -gt 1 ]; <span class="keyword">then</span></span><br><span class="line">    grep <span class="variable">$IP</span> /etc/hosts.deny &gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -gt 0 ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"sshd:<span class="variable">$IP</span>:deny"</span> &gt;&gt; /etc/hosts.deny</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><hr><h1 id="3-列入计划"><a href="#3-列入计划" class="headerlink" title="3. 列入计划"></a>3. 列入计划</h1><p>将脚本文件每一分钟执行一次 (<em> /1 </em> <em> </em> * )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line">* /1 * * * *  sh /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure><h1 id="4-后记"><a href="#4-后记" class="headerlink" title="4. 后记"></a>4. 后记</h1><h2 id="1-查看记录列表"><a href="#1-查看记录列表" class="headerlink" title="1).查看记录列表"></a>1).查看记录列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /usr/<span class="built_in">local</span>/bin/black.list</span><br></pre></td></tr></table></figure><h2 id="2-清空记录列表"><a href="#2-清空记录列表" class="headerlink" title="2).清空记录列表"></a>2).清空记录列表</h2><p>black.list文件是根据secure日志文件通过上面脚本文件生成的，且每分钟会覆盖一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">""</span> &gt; /var/<span class="built_in">log</span>/secure </span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">""</span> &gt; /usr/<span class="built_in">local</span>/bin/black.list</span><br></pre></td></tr></table></figure><h2 id="3-修改hosts-deny文件"><a href="#3-修改hosts-deny文件" class="headerlink" title="3).修改hosts.deny文件"></a>3).修改hosts.deny文件</h2><p>手动添加或删除IP记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/hosts.deny</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;记&quot;&gt;&lt;a href=&quot;#记&quot; class=&quot;headerlink&quot; title=&quot;记&quot;&gt;&lt;/a&gt;记&lt;/h1&gt;&lt;p&gt;继上次爆破防御后，依然有陌生IP骚扰，百无聊赖，以作此篇；&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;查看登录失败的IP&quot;&gt;&lt;a href=&quot;#查看登录失败
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>服务器安防之VPS爆破防御（简）</title>
    <link href="http://nsleep.github.io/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8BVPS%E7%88%86%E7%A0%B4%E9%98%B2%E5%BE%A1%EF%BC%88%E7%AE%80%EF%BC%89/"/>
    <id>http://nsleep.github.io/服务器安防之VPS爆破防御（简）/</id>
    <published>2018-05-05T01:48:35.000Z</published>
    <updated>2018-05-17T00:34:20.351Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h2><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></p><p><img src="Failed login.png" alt="Failed login"></p><hr><h2 id="列出用户所有的登录时间和登录终端的地址"><a href="#列出用户所有的登录时间和登录终端的地址" class="headerlink" title="列出用户所有的登录时间和登录终端的地址"></a>列出用户所有的登录时间和登录终端的地址</h2><p>为了验证是否被入侵，可以先查看现在谁在登录服务器，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last | more</span><br></pre></td></tr></table></figure></p><p>显示系统中所有用户最近一次登录信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lastlog</span><br></pre></td></tr></table></figure></p><hr><h2 id="加入到黑名单"><a href="#加入到黑名单" class="headerlink" title="加入到黑名单"></a>加入到黑名单</h2><p>把对方IP加入到黑名单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts.deny</span><br><span class="line">$ /etc/hosts.deny</span><br></pre></td></tr></table></figure></p><hr><h2 id="禁止所有IP访问SSH功能"><a href="#禁止所有IP访问SSH功能" class="headerlink" title="禁止所有IP访问SSH功能"></a>禁止所有IP访问SSH功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:all:deny"</span> &gt;&gt; /etc/hosts.deny</span><br></pre></td></tr></table></figure><hr><h2 id="（自行决定）"><a href="#（自行决定）" class="headerlink" title="（自行决定）"></a>（自行决定）</h2><h2 id="更改端口号"><a href="#更改端口号" class="headerlink" title="更改端口号"></a>更改端口号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Port 22</span></span><br></pre></td></tr></table></figure><h2 id="禁止root-ssh登录"><a href="#禁止root-ssh登录" class="headerlink" title="禁止root ssh登录"></a>禁止root ssh登录</h2><p>暴力破解骇客首先会尝试root 用户，可以,修改sshd_conf文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#PermitRootLogin no</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;查看登录失败的IP&quot;&gt;&lt;a href=&quot;#查看登录失败的IP&quot; class=&quot;headerlink&quot; title=&quot;查看登录失败的IP&quot;&gt;&lt;/a&gt;查看登录失败的IP&lt;/h2&gt;&lt;p&gt;显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解&lt;br&gt;&lt;f
      
    
    </summary>
    
    
      <category term="服务器安防" scheme="http://nsleep.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（3）</title>
    <link href="http://nsleep.github.io/Hexo-Github-3/"/>
    <id>http://nsleep.github.io/Hexo-Github-3/</id>
    <published>2018-04-01T14:57:42.000Z</published>
    <updated>2018-04-01T15:16:50.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="17、迁移方法"><a href="#17、迁移方法" class="headerlink" title="17、迁移方法"></a>17、迁移方法</h2><h3 id="1-RSS"><a href="#1-RSS" class="headerlink" title="(1)RSS"></a>(1)RSS</h3><p>安装hexo-migrator-rss 插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure></p><p>执行 (<source> 文件路径或网址)</p><pre><code class="bash">hexo migrate rss &lt;<span class="built_in">source</span>&gt;</code></pre><h3 id="2-Jekyll"><a href="#2-Jekyll" class="headerlink" title="(2)Jekyll"></a>(2)Jekyll</h3><p>把_post文件夹下的所有文件复制到source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md  </code></pre><h3 id="3-Octopress"><a href="#3-Octopress" class="headerlink" title="(3)Octopress"></a>(3)Octopress</h3><p>把source/_post文件夹下的所有文件复制到Hexo的source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md</code></pre><h3 id="4-WordPress"><a href="#4-WordPress" class="headerlink" title="(4)WordPress"></a>(4)WordPress</h3><p>安装 hexo-migeator-wordpress 插件</p><pre><code>npm install hexo-migeator-wordpress --save</code></pre><p>从WP导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate wordpress &lt;source&gt;</code></pre><h3 id="5-Joomla"><a href="#5-Joomla" class="headerlink" title="(5)Joomla"></a>(5)Joomla</h3><p>安装 hexo-migeator-joomla插件</p><pre><code>npm install hexo-migeator-joomla --save</code></pre><p>用J2XML组件导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate joomla&lt;source&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;17、迁移方法&quot;&gt;&lt;a href=&quot;#17、迁移方法&quot; class=&quot;headerlink&quot; title=&quot;17、迁移方法&quot;&gt;&lt;/a&gt;17、迁移方法&lt;/h2&gt;&lt;h3 id=&quot;1-RSS&quot;&gt;&lt;a href=&quot;#1-RSS&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（2）</title>
    <link href="http://nsleep.github.io/Hexo-Github-2/"/>
    <id>http://nsleep.github.io/Hexo-Github-2/</id>
    <published>2018-04-01T14:44:04.000Z</published>
    <updated>2018-04-02T23:34:52.003Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span>//新建一篇博客--_posts目录下</span><br><span class="line">hexo d -g//编辑器编好文章，那么就可以生成以及部署了</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo generate--&gt;  hexo g//生成静态文件</span><br><span class="line">hexo deploy--&gt;  hexo d//文件生成后立即部署网站</span><br><span class="line">hexo watch--&gt;  hexo w//监视文件变动</span><br><span class="line">hexo publish [layout] &lt;Filename&gt; //发表草稿</span><br><span class="line">hexo server //启动服务器</span><br><span class="line">hexo port--&gt;  hexo p//重设端口</span><br><span class="line">hexo static--&gt;  hexo s//只使用静态文件</span><br><span class="line">hexo <span class="built_in">log</span>--&gt;  hexo l//启动日志</span><br><span class="line">hexo render &lt;file1&gt;[file2]...//渲染文件</span><br><span class="line">hexo migrate &lt;<span class="built_in">type</span>&gt;//从其他博客迁移</span><br><span class="line">hexo clean--&gt;  hexo c//清除缓存文件db.json和文件夹public</span><br><span class="line">hexo list &lt;<span class="built_in">type</span>&gt;//列出网站资料</span><br><span class="line">hexo version//显示版本</span><br><span class="line">hexo safe//安全模式 不载入插件和脚本</span><br><span class="line">hexo debug//调试模式 显示调试信息记录在debug.log中</span><br><span class="line">hexo silent//简洁模式 隐藏终端信息</span><br><span class="line">hexo config custom.yml//自定义配置文件的路径</span><br><span class="line">hexo draft//显示<span class="built_in">source</span>/_drafts 文件夹中的草稿</span><br><span class="line">hexo cwd /path/to/cwd//自定义当前工作目录的路径</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（1）</title>
    <link href="http://nsleep.github.io/Hexo-Github-1/"/>
    <id>http://nsleep.github.io/Hexo-Github-1/</id>
    <published>2018-04-01T13:46:52.000Z</published>
    <updated>2018-04-16T15:14:39.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、Github账户"><a href="#1、Github账户" class="headerlink" title="1、Github账户"></a>1、Github账户</h2><p>注册并新建项目，项目必须要遵守格式：账户名.github.io</p><h2 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></h2><h3 id="配置好Git环境"><a href="#配置好Git环境" class="headerlink" title="配置好Git环境"></a>配置好Git环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">git config --global user.email <span class="string">"your_email"</span></span><br></pre></td></tr></table></figure><h3 id="创建ssh密钥，将公钥上传"><a href="#创建ssh密钥，将公钥上传" class="headerlink" title="创建ssh密钥，将公钥上传"></a>创建ssh密钥，将公钥上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email"</span> </span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span>  //添加密钥到ssh-agent ,似乎非必要</span><br><span class="line">ssh -T git@github.com  //测试添加ssh是否成功</span><br></pre></td></tr></table></figure><h2 id="3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面"><a href="#3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面" class="headerlink" title="3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面"></a>3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面</h2><h2 id="4、安装Node-js"><a href="#4、安装Node-js" class="headerlink" title="4、安装Node.js"></a>4、安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h2><h3 id="并配置好Node-js环境"><a href="#并配置好Node-js环境" class="headerlink" title="并配置好Node.js环境"></a>并配置好Node.js环境</h3><h2 id="5、安装Hexo"><a href="#5、安装Hexo" class="headerlink" title="5、安装Hexo"></a>5、安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br><span class="line">hexo -v //检查hexo是否安装成功</span><br></pre></td></tr></table></figure><h2 id="6、初始化该文件夹"><a href="#6、初始化该文件夹" class="headerlink" title="6、初始化该文件夹"></a>6、初始化该文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="7、安装所需要的组件"><a href="#7、安装所需要的组件" class="headerlink" title="7、安装所需要的组件"></a>7、安装所需要的组件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="8、Hexo生成静态文件–public文件夹下"><a href="#8、Hexo生成静态文件–public文件夹下" class="headerlink" title="8、Hexo生成静态文件–public文件夹下"></a>8、Hexo生成静态文件–public文件夹下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="9、开启本地服务"><a href="#9、开启本地服务" class="headerlink" title="9、开启本地服务"></a>9、开启本地服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="10、改变端口号"><a href="#10、改变端口号" class="headerlink" title="*10、改变端口号"></a>*10、改变端口号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 端口号</span><br></pre></td></tr></table></figure><h2 id="11、修改-config-yml文件"><a href="#11、修改-config-yml文件" class="headerlink" title="11、修改_config.yml文件"></a>11、修改_config.yml文件</h2><p>修改repo值（在末尾）,注意：所有配置项目的分号后都需要一个空格<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: git@github.com:your_name/your_name.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p><h2 id="12、生成及部署文章"><a href="#12、生成及部署文章" class="headerlink" title="12、生成及部署文章"></a>12、生成及部署文章</h2><p>生成以及部署文章之前，需要安装一个扩展<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span>//新建一篇博客--_posts目录下</span><br><span class="line">hexo d -g//编辑器编好文章，那么就可以生成以及部署了</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、Github账户&quot;&gt;&lt;a href=&quot;#1、Github账户&quot; class=&quot;headerlink&quot; title=&quot;1、Github账户&quot;&gt;&lt;/a&gt;1、Github账户&lt;/h2&gt;&lt;p&gt;注册并新建项目，项目必须要遵守格式：账户名.github.io&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://nsleep.github.io/hello-world/"/>
    <id>http://nsleep.github.io/hello-world/</id>
    <published>2018-03-24T01:28:28.450Z</published>
    <updated>2018-03-24T01:06:41.079Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
