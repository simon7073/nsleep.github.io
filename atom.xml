<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon 的博客</title>
  
  <subtitle>Simon</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nsleep.github.io/"/>
  <updated>2019-03-24T02:32:05.183Z</updated>
  <id>http://nsleep.github.io/</id>
  
  <author>
    <name>程乾</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SS加速</title>
    <link href="http://nsleep.github.io/2019/0324/SS%E5%8A%A0%E9%80%9F/"/>
    <id>http://nsleep.github.io/2019/0324/SS加速/</id>
    <published>2019-03-24T02:18:26.000Z</published>
    <updated>2019-03-24T02:32:05.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ss加速"><a href="#ss加速" class="headerlink" title="ss加速"></a>ss加速</h1><h2 id="bbr-加速下载"><a href="#bbr-加速下载" class="headerlink" title="bbr 加速下载"></a>bbr 加速下载</h2><p>参考文章：<a href="https://teddysun.com/489.html" target="_blank" rel="noopener">秋水逸冰 - 一键安装最新内核并开启 BBR 脚本</a></p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure></div><hr><h2 id="锐速ServerSpeeder"><a href="#锐速ServerSpeeder" class="headerlink" title="锐速ServerSpeeder"></a>锐速ServerSpeeder</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh</span><br><span class="line">$ bash serverspeeder.sh</span><br></pre></td></tr></table></figure></div><hr><p><strong>PS:</strong> <a href="https://www.moerats.com/archives/387/" target="_blank" rel="noopener">BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ss加速&quot;&gt;&lt;a href=&quot;#ss加速&quot; class=&quot;headerlink&quot; title=&quot;ss加速&quot;&gt;&lt;/a&gt;ss加速&lt;/h1&gt;&lt;h2 id=&quot;bbr-加速下载&quot;&gt;&lt;a href=&quot;#bbr-加速下载&quot; class=&quot;headerlink&quot; title=&quot;b
      
    
    </summary>
    
    
      <category term="VPN架设" scheme="http://nsleep.github.io/tags/VPN%E6%9E%B6%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>Django初步</title>
    <link href="http://nsleep.github.io/2019/0224/Django%E5%88%9D%E6%AD%A5/"/>
    <id>http://nsleep.github.io/2019/0224/Django初步/</id>
    <published>2019-02-24T03:26:44.000Z</published>
    <updated>2019-03-02T11:25:44.570Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>正在学习<a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a>中…</p></blockquote><blockquote><p><a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a> 是一个高级Python Web框架，鼓励快速开发和干净，实用的设计。由经验丰富的开发人员构建，它解决了Web开发的大部分麻烦，因此您可以专注于编写应用程序而无需重新发明轮子。它是免费和开源的。</p></blockquote><p>参考文档：<br>&emsp;&emsp;<a href="https://docs.djangoproject.com/zh-hans/2.1/" target="_blank" rel="noopener">Django 文档</a><br>&emsp;&emsp;<a href="https://docs.djangoproject.com/zh-hans/2.1/intro/" target="_blank" rel="noopener">Django 教程</a><br>&emsp;&emsp;<a href="https://www.cnblogs.com/zhangxinqi/p/8969006.html" target="_blank" rel="noopener">python3之Django基础篇</a><br>&emsp;&emsp;<a href="http://www.runoob.com/django/django-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;正在学习&lt;a href=&quot;https://www.djangoproject.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Django&lt;/a&gt;中…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
      <category term="编程" scheme="http://nsleep.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python" scheme="http://nsleep.github.io/tags/python/"/>
    
      <category term="Django" scheme="http://nsleep.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://nsleep.github.io/2018/0830/hello-world/"/>
    <id>http://nsleep.github.io/2018/0830/hello-world/</id>
    <published>2018-08-30T13:48:45.056Z</published>
    <updated>2019-02-12T17:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>19/02/13 更新：翻译此篇例文</li></ul><hr><p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>!这是你的第一篇文章。查看<a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a>以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除</a>中找到答案，或者您可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上询问我。</p><a id="more"></a><h2 id="1-快速开始"><a href="#1-快速开始" class="headerlink" title="1 快速开始"></a>1 快速开始</h2><h3 id="1-1-创建一个新帖子"><a href="#1-1-创建一个新帖子" class="headerlink" title="1.1 创建一个新帖子"></a>1.1 创建一个新帖子</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="1-2-运行服务器"><a href="#1-2-运行服务器" class="headerlink" title="1.2 运行服务器"></a>1.2 运行服务器</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="1-3-生成静态文件"><a href="#1-3-生成静态文件" class="headerlink" title="1.3 生成静态文件"></a>1.3 生成静态文件</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="1-4-部署到远程站点"><a href="#1-4-部署到远程站点" class="headerlink" title="1.4 部署到远程站点"></a>1.4 部署到远程站点</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;19/02/13 更新：翻译此篇例文&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;欢迎来到&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;!这是你的第一篇文章。查看&lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在&lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;故障排除&lt;/a&gt;中找到答案，或者您可以在&lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;上询问我。&lt;/p&gt;
    
    </summary>
    
      <category term="扉页" scheme="http://nsleep.github.io/categories/%E6%89%89%E9%A1%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo-Github-绑定域名</title>
    <link href="http://nsleep.github.io/2018/0730/Hexo-Github-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <id>http://nsleep.github.io/2018/0730/Hexo-Github-绑定域名/</id>
    <published>2018-07-29T17:23:48.000Z</published>
    <updated>2019-02-20T07:41:38.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-获取GitHub-Pages的IP"><a href="#1-获取GitHub-Pages的IP" class="headerlink" title="1. 获取GitHub Pages的IP"></a>1. 获取GitHub Pages的IP</h2><p>Ping出Github Pages的IP </p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ping YOURNAME.github.io</span><br></pre></td></tr></table></figure></div><h2 id="2-配置域名"><a href="#2-配置域名" class="headerlink" title="2. 配置域名"></a>2. 配置域名</h2><p>在目录 YOURNAME\source 下添加一个名为CNAME的文件，文件的内容就是你的域名。</p><h2 id="3-域名解析"><a href="#3-域名解析" class="headerlink" title="3. 域名解析"></a>3. 域名解析</h2><p>修改的时候只要修改两个记录类型为A，主机记录分别为@和www的行就可以了<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-获取GitHub-Pages的IP&quot;&gt;&lt;a href=&quot;#1-获取GitHub-Pages的IP&quot; class=&quot;headerlink&quot; title=&quot;1. 获取GitHub Pages的IP&quot;&gt;&lt;/a&gt;1. 获取GitHub Pages的IP&lt;/h2&gt;&lt;p&gt;Ping出Github Pages的IP &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ping YOURNAME.github.io&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-配置域名&quot;&gt;&lt;a href=&quot;#2-配置域名&quot; class=&quot;headerlink&quot; title=&quot;2. 配置域名&quot;&gt;&lt;/a&gt;2. 配置域名&lt;/h2&gt;&lt;p&gt;在目录 YOURNAME\source 下添加一个名为CNAME的文件，文件的内容就是你的域名。&lt;/p&gt;
&lt;h2 id=&quot;3-域名解析&quot;&gt;&lt;a href=&quot;#3-域名解析&quot; class=&quot;headerlink&quot; title=&quot;3. 域名解析&quot;&gt;&lt;/a&gt;3. 域名解析&lt;/h2&gt;&lt;p&gt;修改的时候只要修改两个记录类型为A，主机记录分别为@和www的行就可以了&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Github-备份</title>
    <link href="http://nsleep.github.io/2018/0722/Hexo-Github-%E5%A4%87%E4%BB%BD/"/>
    <id>http://nsleep.github.io/2018/0722/Hexo-Github-备份/</id>
    <published>2018-07-22T07:59:55.000Z</published>
    <updated>2019-02-20T07:40:15.360Z</updated>
    
    <content type="html"><![CDATA[<p>咱用Hexo+GitHub搭建Blog后想要进行备份，方法之一就是通过创建分支把源码放到GitHub上。</p><h1 id="一、-咱要备份哪些文件捏？"><a href="#一、-咱要备份哪些文件捏？" class="headerlink" title="一、 咱要备份哪些文件捏？"></a>一、 咱要备份哪些文件捏？</h1><h2 id="1、-文章"><a href="#1、-文章" class="headerlink" title="1、 文章"></a>1、 文章</h2><p>./source 文件夹，这个就不用说了，这里面包含了你写的文章的 markdown 源码，这个是最重要的。</p><h2 id="2、-配置文件"><a href="#2、-配置文件" class="headerlink" title="2、 配置文件"></a>2、 配置文件</h2><p>根目录下的几个配置文件，主要是 _config.yml、 package.json、 .gitignore。<br><a id="more"></a></p><h2 id="3、-主题文件夹"><a href="#3、-主题文件夹" class="headerlink" title="3、 主题文件夹"></a>3、 主题文件夹</h2><p>./themes/themes_name 这里的 themes_name 指的是你的主题名称， 如果咱对主题进行了一些个性化的配置， 那么这个主题也最好全部备份。</p><h2 id="4、-模版"><a href="#4、-模版" class="headerlink" title="4、 模版"></a>4、 模版</h2><p>./scaffolds 文件夹， 这个文件夹里是创建文    章时的模板， 如果没修改过这个文件夹中的东西， 可以不用备份。</p><h2 id="5、-密钥"><a href="#5、-密钥" class="headerlink" title="5、 密钥"></a>5、 密钥</h2><p>.ssh， 咱认为没必要备份，直接放到GitHub不安全，大不了重新生成嘛。</p><h1 id="二、-备份到哪？"><a href="#二、-备份到哪？" class="headerlink" title="二、 备份到哪？"></a>二、 备份到哪？</h1><p>创建GitHub Pages 时咱创建了两个分支：master 与 hexo</p><ul><li>master 分支用来存放生成的静态网页</li><li>hexo 分支用来存放网站的原始文件</li></ul><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git status</span><br><span class="line">$ git commit -m <span class="string">'...'</span></span><br><span class="line">$ git push --<span class="built_in">set</span>-upstream origin hexo</span><br></pre></td></tr></table></figure></div><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 另附：</span></span><br><span class="line">$ git branch -a <span class="comment"># 查看远程分支</span></span><br><span class="line">$ git branch <span class="comment"># 查看本地分支</span></span><br><span class="line">$ git checkout master <span class="comment"># 切换分支</span></span><br></pre></td></tr></table></figure></div><h1 id="三、-那么怎么去备份捏？"><a href="#三、-那么怎么去备份捏？" class="headerlink" title="三、 那么怎么去备份捏？"></a>三、 那么怎么去备份捏？</h1><p>创建GitHub Pages 时创建两个分支：master 与 hexo<br>设置hexo 为默认分支，修改_config.yml中的deploy参数， 分支应为master；<br>依次执行<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add . </span><br><span class="line">$ git commit -m “…”</span><br><span class="line">$ git push –<span class="built_in">set</span>-upstream origin hexo</span><br></pre></td></tr></table></figure></div></p><p>提交原始文件到Hexo</p><h1 id="四、-修改日常！"><a href="#四、-修改日常！" class="headerlink" title="四、 修改日常！"></a>四、 修改日常！</h1><p>依次执行<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">'...'</span></span><br><span class="line">$ git push origin hexo</span><br></pre></td></tr></table></figure></div></p><p>指令将改动推送到GitHub（此时当前分支应为hexo）；<br>然后执行<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></div></p><p>会发布网站到master分支上。另外，两个过程顺序调转一般不会有问题。</p><h1 id="五、-那么怎么恢复编辑文件捏？"><a href="#五、-那么怎么恢复编辑文件捏？" class="headerlink" title="五、 那么怎么恢复编辑文件捏？"></a>五、 那么怎么恢复编辑文件捏？</h1><pre><code>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</code></pre><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b hexo git@github.com:YOURNAME/YOURNAME.github.io.git</span><br><span class="line"><span class="comment"># 在本地新拷贝的YOURNAME.github.io文件夹下通过Git bash依次执行下列指令：</span></span><br><span class="line">$ npm install hexo</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br><span class="line">（记得，不需要hexo init这条指令）。</span><br></pre></td></tr></table></figure></div><h1 id="六、-参考文档："><a href="#六、-参考文档：" class="headerlink" title="六、 参考文档："></a>六、 参考文档：</h1><pre><code>(GitHub Pages + Hexo搭建博客)[http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more][使用hexo，如果换了电脑怎么更新博客？(知乎)](https://www.zhihu.com/question/21193762)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;咱用Hexo+GitHub搭建Blog后想要进行备份，方法之一就是通过创建分支把源码放到GitHub上。&lt;/p&gt;
&lt;h1 id=&quot;一、-咱要备份哪些文件捏？&quot;&gt;&lt;a href=&quot;#一、-咱要备份哪些文件捏？&quot; class=&quot;headerlink&quot; title=&quot;一、 咱要备份哪些文件捏？&quot;&gt;&lt;/a&gt;一、 咱要备份哪些文件捏？&lt;/h1&gt;&lt;h2 id=&quot;1、-文章&quot;&gt;&lt;a href=&quot;#1、-文章&quot; class=&quot;headerlink&quot; title=&quot;1、 文章&quot;&gt;&lt;/a&gt;1、 文章&lt;/h2&gt;&lt;p&gt;./source 文件夹，这个就不用说了，这里面包含了你写的文章的 markdown 源码，这个是最重要的。&lt;/p&gt;
&lt;h2 id=&quot;2、-配置文件&quot;&gt;&lt;a href=&quot;#2、-配置文件&quot; class=&quot;headerlink&quot; title=&quot;2、 配置文件&quot;&gt;&lt;/a&gt;2、 配置文件&lt;/h2&gt;&lt;p&gt;根目录下的几个配置文件，主要是 _config.yml、 package.json、 .gitignore。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://nsleep.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>服务器管理面板</title>
    <link href="http://nsleep.github.io/2018/0623/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/"/>
    <id>http://nsleep.github.io/2018/0623/服务器管理面板/</id>
    <published>2018-06-23T13:16:52.000Z</published>
    <updated>2019-02-20T07:35:11.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="免费-Linux-服务器管理面板"><a href="#免费-Linux-服务器管理面板" class="headerlink" title="免费 Linux 服务器管理面板"></a>免费 Linux 服务器管理面板</h1><hr><h2 id="1-宝塔面板"><a href="#1-宝塔面板" class="headerlink" title="1.宝塔面板"></a>1.<a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔面板</a></h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1).下载"></a>1).下载</h3><ul><li>Linux版<a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">下载</a></li></ul><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure></div><a id="more"></a><ul><li>Window版<a href="http://download.bt.cn/win/update/net/BtSoft-Win.zip" target="_blank" rel="noopener">下载</a>：<br><a href="http://download.bt.cn/win/update/net/BtSoft-Win.zip" target="_blank" rel="noopener">http://download.bt.cn/win/update/net/BtSoft-Win.zip</a></li></ul><h3 id="2-卸载"><a href="#2-卸载" class="headerlink" title="2).卸载"></a>2).卸载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</span><br></pre></td></tr></table></figure></div><hr><h2 id="2-AMH面板"><a href="#2-AMH面板" class="headerlink" title="2.AMH面板"></a>2.<a href="http://amh.sh/install.htm" target="_blank" rel="noopener">AMH面板</a></h2><p>国内、半开源、有收费版本、中文</p><h3 id="1-下载-1"><a href="#1-下载-1" class="headerlink" title="1).下载"></a>1).下载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://amh.sh/amh.sh &amp;&amp; bash amh.sh 2&gt;&amp;1 | tee amh.log</span><br></pre></td></tr></table></figure></div><h3 id="2-卸载-1"><a href="#2-卸载-1" class="headerlink" title="2).卸载"></a>2).卸载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">killall php-fpm</span><br><span class="line">amh nginx stop</span><br><span class="line">amh mysql stop</span><br><span class="line"></span><br><span class="line">rm /root/amh -rf;</span><br><span class="line">rm /home/usrdata /home/wwwroot -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/amh* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/libiconv* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/nginx* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/mysql* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/php* -rf;</span><br><span class="line">rm /etc/init.d/amh-start /etc/amh-iptables /bin/amh -f;</span><br></pre></td></tr></table></figure></div><hr><h2 id="3-WDCP面板"><a href="#3-WDCP面板" class="headerlink" title="3.WDCP面板"></a>3.<a href="https://www.wdlinux.cn/lanmp/install.html" target="_blank" rel="noopener">WDCP面板</a></h2><p>国内、闭源、免费、中文</p><h3 id="1-下载-2"><a href="#1-下载-2" class="headerlink" title="1).下载"></a>1).下载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://dl.wdlinux.cn:5180/lanmp_laster.tar.gz</span><br><span class="line">$ tar zxvf lanmp_laster.tar.gz</span><br><span class="line">$ sh install.sh    (或sh in.sh) (默认会安装wdcp,如果只要web环境,而不想安装wdcp,这里改为 sh lanmp.sh即可)</span><br></pre></td></tr></table></figure></div><h3 id="2-卸载-2"><a href="#2-卸载-2" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>(注意备份数据,否则后果自负)</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh install.sh uninstall    (或sh in.sh uninstall)</span><br></pre></td></tr></table></figure></div><hr><h2 id="4-VestaCP面板"><a href="#4-VestaCP面板" class="headerlink" title="4.VestaCP面板"></a>4.<a href="http://www.vestacp.com/install/" target="_blank" rel="noopener">VestaCP面板</a></h2><h3 id="1-下载-3"><a href="#1-下载-3" class="headerlink" title="1).下载"></a>1).下载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O http://vestacp.com/pub/vst-install.sh &amp;&amp; bash vst-install.sh</span><br></pre></td></tr></table></figure></div><h3 id="2-卸载-3"><a href="#2-卸载-3" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>a.停止VESTA服务</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service vesta stop</span><br></pre></td></tr></table></figure></div><p>b.卸载</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CentOS:</span><br><span class="line">$ yum remove vesta*</span><br><span class="line">$ rm -f /etc/yum.repos.d/vesta.repo</span><br><span class="line"></span><br><span class="line">Debian/Ubuntu:</span><br><span class="line">$ apt-get remove vesta*</span><br><span class="line">$ rm -f /etc/apt/sources.list.d/vesta.list</span><br></pre></td></tr></table></figure></div><p>c. 删除数据目录和计划任务</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/vesta</span><br></pre></td></tr></table></figure></div><hr><h2 id="5-AppNode面板"><a href="#5-AppNode面板" class="headerlink" title="5.AppNode面板"></a>5.<a href="https://www.appnode.com/install" target="_blank" rel="noopener">AppNode面板</a></h2><h3 id="1-下载-4"><a href="#1-下载-4" class="headerlink" title="1).下载"></a>1).下载</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ INSTALL_AGENT=1 INSTALL_APPS=sitemgr INIT_SWAPFILE=1 INSTALL_PKGS=<span class="string">'nginx-stable,php56,mysql56'</span> bash -c <span class="string">"<span class="variable">$(curl -sS http://dl.appnode.com/install.sh)</span>"</span></span><br></pre></td></tr></table></figure></div><h3 id="2-卸载-4"><a href="#2-卸载-4" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>a.卸载受控端</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appnode agent remove</span><br></pre></td></tr></table></figure></div><p>b.卸载控制中心</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appnode ccenter remove</span><br></pre></td></tr></table></figure></div><p>c.清除残留数据和配置<br>如果要彻底清除卸载后的残留数据和配置文件，删除三个目录即可：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /opt/appnode/&#123;ccenter,agent,ui&#125;/</span><br></pre></td></tr></table></figure></div><pre><code>注意：由面板安装的环境软件，不会被自动卸载</code></pre><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;免费-Linux-服务器管理面板&quot;&gt;&lt;a href=&quot;#免费-Linux-服务器管理面板&quot; class=&quot;headerlink&quot; title=&quot;免费 Linux 服务器管理面板&quot;&gt;&lt;/a&gt;免费 Linux 服务器管理面板&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-宝塔面板&quot;&gt;&lt;a href=&quot;#1-宝塔面板&quot; class=&quot;headerlink&quot; title=&quot;1.宝塔面板&quot;&gt;&lt;/a&gt;1.&lt;a href=&quot;https://www.bt.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;宝塔面板&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;1-下载&quot;&gt;&lt;a href=&quot;#1-下载&quot; class=&quot;headerlink&quot; title=&quot;1).下载&quot;&gt;&lt;/a&gt;1).下载&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Linux版&lt;a href=&quot;http://download.bt.cn/install/install.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum install -y wget &amp;amp;&amp;amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;amp;&amp;amp; sh install.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务器管理" scheme="http://nsleep.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86/"/>
    
      <category term="Web 网站架设" scheme="http://nsleep.github.io/tags/Web-%E7%BD%91%E7%AB%99%E6%9E%B6%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>VPN的简单架设</title>
    <link href="http://nsleep.github.io/2018/0623/VPN%E7%9A%84%E7%AE%80%E5%8D%95%E6%9E%B6%E8%AE%BE/"/>
    <id>http://nsleep.github.io/2018/0623/VPN的简单架设/</id>
    <published>2018-06-23T11:58:43.000Z</published>
    <updated>2019-03-24T02:23:02.019Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>提要：<br>      系统：CentOS 6.9</p></blockquote><h1 id="下载shadowsocks服务端"><a href="#下载shadowsocks服务端" class="headerlink" title="下载shadowsocks服务端"></a>下载shadowsocks服务端</h1><p>参考文章：<a href="https://teddysun.com/486.html" target="_blank" rel="noopener">秋水逸冰 - Shadowsocks 一键安装脚本（四合一）</a></p><p>使用root用户登录，运行以下命令：<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh &amp;&amp; chmod +x shadowsocks-all.sh &amp;&amp; ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></figure></div></p><a id="more"></a><hr><h1 id="安装Win-ss客户端"><a href="#安装Win-ss客户端" class="headerlink" title="安装Win ss客户端"></a>安装Win ss客户端</h1><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">常规版 Shadowsocks</a> </p><p><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases" target="_blank" rel="noopener">ShadowsocksR 版</a> </p><hr><h2 id="卸载方法"><a href="#卸载方法" class="headerlink" title="卸载方法"></a>卸载方法</h2><p>若已安装多个版本，则卸载时也需多次运行</p><p>使用root用户登录，运行以下命令：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-all.sh uninstall</span><br></pre></td></tr></table></figure></div><h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><p>Shadowsocks-Python 版：<br>/etc/init.d/shadowsocks-python start | stop | restart | status</p><p>ShadowsocksR 版：<br>/etc/init.d/shadowsocks-r start | stop | restart | status</p><p>Shadowsocks-Go 版：<br>/etc/init.d/shadowsocks-go start | stop | restart | status</p><p>Shadowsocks-libev 版：<br>/etc/init.d/shadowsocks-libev start | stop | restart | status</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>Shadowsocks-Python 版：<br>/etc/shadowsocks-python/config.json</p><p>ShadowsocksR 版：<br>/etc/shadowsocks-r/config.json</p><p>Shadowsocks-Go 版：<br>/etc/shadowsocks-go/config.json</p><p>Shadowsocks-libev 版：<br>/etc/shadowsocks-libev/config.json</p><hr><p><strong>PS:</strong> <a href="https://do.freess.today/" target="_blank" rel="noopener">Free SS</a></p><ul><li>19/3/24：更新;另作SS加速</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;提要：&lt;br&gt;      系统：CentOS 6.9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;下载shadowsocks服务端&quot;&gt;&lt;a href=&quot;#下载shadowsocks服务端&quot; class=&quot;headerlink&quot; title=&quot;下载shadowsocks服务端&quot;&gt;&lt;/a&gt;下载shadowsocks服务端&lt;/h1&gt;&lt;p&gt;参考文章：&lt;a href=&quot;https://teddysun.com/486.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;秋水逸冰 - Shadowsocks 一键安装脚本（四合一）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用root用户登录，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh &amp;amp;&amp;amp; chmod +x shadowsocks-all.sh &amp;amp;&amp;amp; ./shadowsocks-all.sh 2&amp;gt;&amp;amp;1 | tee shadowsocks-all.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="VPN架设" scheme="http://nsleep.github.io/tags/VPN%E6%9E%B6%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>服务器安防之登陆次数限制</title>
    <link href="http://nsleep.github.io/2018/0517/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8B%E7%99%BB%E9%99%86%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/"/>
    <id>http://nsleep.github.io/2018/0517/服务器安防之登陆次数限制/</id>
    <published>2018-05-17T01:05:42.000Z</published>
    <updated>2019-02-20T07:34:13.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记"><a href="#记" class="headerlink" title="记"></a>记</h1><p>继上次爆破防御后，依然有陌生IP骚扰，百无聊赖，续作此篇；</p><hr><h1 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h1><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></div></p><a id="more"></a><hr><h1 id="1-始终允许IP"><a href="#1-始终允许IP" class="headerlink" title="1. 始终允许IP"></a>1. 始终允许IP</h1><p>假设IP：192.168.18.1 是经常登录的IP，填入 /etc/hosts.allow ，当然 :allow 是可以省略的。当hosts.allow和host.deny相冲突时, 以hosts.allow设置为准</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:192.168.18.1:allow"</span> &gt;&gt; /etc/hosts.allow</span><br></pre></td></tr></table></figure></div><hr><h1 id="2-写脚本"><a href="#2-写脚本" class="headerlink" title="2. 写脚本"></a>2. 写脚本</h1><p>在路径 ‘/usr/local/bin/‘ 下，创建文件 ‘secure_ssh.sh’ ，<br>错误次数大于个位数，即错误次数大于等于10就将IP列入黑名单(判断见行7)。</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure></div><p>内容如下：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/secure|awk <span class="string">'/Failed/&#123;print $(NF-3)&#125;'</span>|sort|uniq -c|awk <span class="string">'&#123;print $2"="$1;&#125;'</span> &gt; /usr/<span class="built_in">local</span>/bin/black.list</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat  /usr/<span class="built_in">local</span>/bin/black.list`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  IP=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">  NUM=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;#NUM&#125;</span> -gt 1 ]; <span class="keyword">then</span></span><br><span class="line">    grep <span class="variable">$IP</span> /etc/hosts.deny &gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -gt 0 ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"sshd:<span class="variable">$IP</span>:deny"</span> &gt;&gt; /etc/hosts.deny</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></div><hr><h1 id="3-列入计划"><a href="#3-列入计划" class="headerlink" title="3. 列入计划"></a>3. 列入计划</h1><p>将脚本文件每一分钟执行一次 (<em> /1 </em> <em> </em> * )</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure></div><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  /1 * * * *  sh /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br><span class="line">或</span><br><span class="line">  * * * * *  sh /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure></div><h1 id="4-后记"><a href="#4-后记" class="headerlink" title="4. 后记"></a>4. 后记</h1><h2 id="1-查看记录列表"><a href="#1-查看记录列表" class="headerlink" title="1).查看记录列表"></a>1).查看记录列表</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /usr/<span class="built_in">local</span>/bin/black.list</span><br></pre></td></tr></table></figure></div><h2 id="2-清空记录列表"><a href="#2-清空记录列表" class="headerlink" title="2).清空记录列表"></a>2).清空记录列表</h2><p>black.list文件是根据secure日志文件通过上面脚本文件生成的，且每分钟会覆盖一次</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;&quot; &gt; /var/log/secure </span><br><span class="line">$ echo &quot;&quot; &gt; /usr/local/bin/black.list</span><br></pre></td></tr></table></figure></div><h2 id="3-修改hosts-deny文件"><a href="#3-修改hosts-deny文件" class="headerlink" title="3).修改hosts.deny文件"></a>3).修改hosts.deny文件</h2><p>手动添加或删除IP记录</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/hosts.deny</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记&quot;&gt;&lt;a href=&quot;#记&quot; class=&quot;headerlink&quot; title=&quot;记&quot;&gt;&lt;/a&gt;记&lt;/h1&gt;&lt;p&gt;继上次爆破防御后，依然有陌生IP骚扰，百无聊赖，续作此篇；&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;查看登录失败的IP&quot;&gt;&lt;a href=&quot;#查看登录失败的IP&quot; class=&quot;headerlink&quot; title=&quot;查看登录失败的IP&quot;&gt;&lt;/a&gt;查看登录失败的IP&lt;/h1&gt;&lt;p&gt;显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ grep &lt;span class=&quot;string&quot;&gt;&quot;Failed password for root&quot;&lt;/span&gt; /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/secure | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $11&amp;#125;&#39;&lt;/span&gt; | sort | uniq -c | sort -nr | more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器安防" scheme="http://nsleep.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2/"/>
    
  </entry>
  
  <entry>
    <title>服务器安防之VPS爆破防御（简）</title>
    <link href="http://nsleep.github.io/2018/0505/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8BVPS%E7%88%86%E7%A0%B4%E9%98%B2%E5%BE%A1%EF%BC%88%E7%AE%80%EF%BC%89/"/>
    <id>http://nsleep.github.io/2018/0505/服务器安防之VPS爆破防御（简）/</id>
    <published>2018-05-05T01:48:35.000Z</published>
    <updated>2019-02-20T07:33:43.148Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h2><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></div></p><a id="more"></a><p><img src="Failed login.png" alt="Failed login"></p><hr><h2 id="列出用户所有的登录时间和登录终端的地址"><a href="#列出用户所有的登录时间和登录终端的地址" class="headerlink" title="列出用户所有的登录时间和登录终端的地址"></a>列出用户所有的登录时间和登录终端的地址</h2><p>为了验证是否被入侵，可以先查看现在谁在登录服务器，<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last | more</span><br></pre></td></tr></table></figure></div></p><p>显示系统中所有用户最近一次登录信息<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lastlog</span><br></pre></td></tr></table></figure></div></p><hr><h2 id="加入到黑名单"><a href="#加入到黑名单" class="headerlink" title="加入到黑名单"></a>加入到黑名单</h2><p>把对方IP加入到黑名单<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts.deny</span><br><span class="line">$ /etc/hosts.deny</span><br></pre></td></tr></table></figure></div></p><hr><h2 id="禁止所有IP访问SSH功能"><a href="#禁止所有IP访问SSH功能" class="headerlink" title="禁止所有IP访问SSH功能"></a>禁止所有IP访问SSH功能</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:all:deny"</span> &gt;&gt; /etc/hosts.deny</span><br></pre></td></tr></table></figure></div><hr><h2 id="（自行决定）"><a href="#（自行决定）" class="headerlink" title="（自行决定）"></a>（自行决定）</h2><h2 id="更改端口号"><a href="#更改端口号" class="headerlink" title="更改端口号"></a>更改端口号</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Port 22</span></span><br></pre></td></tr></table></figure></div><h2 id="禁止root-ssh登录"><a href="#禁止root-ssh登录" class="headerlink" title="禁止root ssh登录"></a>禁止root ssh登录</h2><p>暴力破解骇客首先会尝试root 用户，可以,修改sshd_conf文件。<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div></p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#PermitRootLogin no</span><br></pre></td></tr></table></figure></div><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure></div><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;查看登录失败的IP&quot;&gt;&lt;a href=&quot;#查看登录失败的IP&quot; class=&quot;headerlink&quot; title=&quot;查看登录失败的IP&quot;&gt;&lt;/a&gt;查看登录失败的IP&lt;/h2&gt;&lt;p&gt;显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ grep &lt;span class=&quot;string&quot;&gt;&quot;Failed password for root&quot;&lt;/span&gt; /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/secure | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $11&amp;#125;&#39;&lt;/span&gt; | sort | uniq -c | sort -nr | more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器安防" scheme="http://nsleep.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（3）</title>
    <link href="http://nsleep.github.io/2018/0401/Hexo-Github-3/"/>
    <id>http://nsleep.github.io/2018/0401/Hexo-Github-3/</id>
    <published>2018-04-01T14:57:42.000Z</published>
    <updated>2019-02-20T07:32:08.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><h2 id="17、迁移方法"><a href="#17、迁移方法" class="headerlink" title="17、迁移方法"></a>17、迁移方法</h2><h3 id="1-RSS"><a href="#1-RSS" class="headerlink" title="(1)RSS"></a>(1)RSS</h3><p>安装hexo-migrator-rss 插件<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure></div></p><p>执行 (<source> 文件路径或网址)</p><pre><code class="bash">hexo migrate rss &lt;<span class="built_in">source</span>&gt;</code></pre><a id="more"></a><h3 id="2-Jekyll"><a href="#2-Jekyll" class="headerlink" title="(2)Jekyll"></a>(2)Jekyll</h3><p>把_post文件夹下的所有文件复制到source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md  </code></pre><h3 id="3-Octopress"><a href="#3-Octopress" class="headerlink" title="(3)Octopress"></a>(3)Octopress</h3><p>把source/_post文件夹下的所有文件复制到Hexo的source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md</code></pre><h3 id="4-WordPress"><a href="#4-WordPress" class="headerlink" title="(4)WordPress"></a>(4)WordPress</h3><p>安装 hexo-migeator-wordpress 插件</p><pre><code>npm install hexo-migeator-wordpress --save</code></pre><p>从WP导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate wordpress &lt;source&gt;</code></pre><h3 id="5-Joomla"><a href="#5-Joomla" class="headerlink" title="(5)Joomla"></a>(5)Joomla</h3><p>安装 hexo-migeator-joomla插件</p><pre><code>npm install hexo-migeator-joomla --save</code></pre><p>用J2XML组件导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate joomla&lt;source&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;续&quot;&gt;&lt;a href=&quot;#续&quot; class=&quot;headerlink&quot; title=&quot;续&quot;&gt;&lt;/a&gt;续&lt;/h1&gt;&lt;h2 id=&quot;17、迁移方法&quot;&gt;&lt;a href=&quot;#17、迁移方法&quot; class=&quot;headerlink&quot; title=&quot;17、迁移方法&quot;&gt;&lt;/a&gt;17、迁移方法&lt;/h2&gt;&lt;h3 id=&quot;1-RSS&quot;&gt;&lt;a href=&quot;#1-RSS&quot; class=&quot;headerlink&quot; title=&quot;(1)RSS&quot;&gt;&lt;/a&gt;(1)RSS&lt;/h3&gt;&lt;p&gt;安装hexo-migrator-rss 插件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-migrator-rss --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行 (&lt;source&gt; 文件路径或网址)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;hexo migrate rss &amp;lt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（2）</title>
    <link href="http://nsleep.github.io/2018/0401/Hexo-Github-2/"/>
    <id>http://nsleep.github.io/2018/0401/Hexo-Github-2/</id>
    <published>2018-04-01T14:44:04.000Z</published>
    <updated>2019-02-20T07:31:49.429Z</updated>
    
    <content type="html"><![CDATA[<h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span>//新建一篇博客--_posts目录下</span><br><span class="line">hexo d -g//编辑器编好文章，那么就可以生成以及部署了</span><br></pre></td></tr></table></figure></div><a id="more"></a><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo generate--&gt;  hexo g//生成静态文件</span><br><span class="line">hexo deploy--&gt;  hexo d//文件生成后立即部署网站</span><br><span class="line">hexo watch--&gt;  hexo w//监视文件变动</span><br><span class="line">hexo publish [layout] &lt;Filename&gt; //发表草稿</span><br><span class="line">hexo server //启动服务器</span><br><span class="line">hexo port--&gt;  hexo p//重设端口</span><br><span class="line">hexo static--&gt;  hexo s//只使用静态文件</span><br><span class="line">hexo <span class="built_in">log</span>--&gt;  hexo l//启动日志</span><br><span class="line">hexo render &lt;file1&gt;[file2]...//渲染文件</span><br><span class="line">hexo migrate &lt;<span class="built_in">type</span>&gt;//从其他博客迁移</span><br><span class="line">hexo clean--&gt;  hexo c//清除缓存文件db.json和文件夹public</span><br><span class="line">hexo list &lt;<span class="built_in">type</span>&gt;//列出网站资料</span><br><span class="line">hexo version//显示版本</span><br><span class="line">hexo safe//安全模式 不载入插件和脚本</span><br><span class="line">hexo debug//调试模式 显示调试信息记录在debug.log中</span><br><span class="line">hexo silent//简洁模式 隐藏终端信息</span><br><span class="line">hexo config custom.yml//自定义配置文件的路径</span><br><span class="line">hexo draft//显示<span class="built_in">source</span>/_drafts 文件夹中的草稿</span><br><span class="line">hexo cwd /path/to/cwd//自定义当前工作目录的路径</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;续&quot;&gt;&lt;a href=&quot;#续&quot; class=&quot;headerlink&quot; title=&quot;续&quot;&gt;&lt;/a&gt;续&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new post &lt;span class=&quot;string&quot;&gt;&quot;博客名&quot;&lt;/span&gt;			//新建一篇博客--_posts目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d -g				//编辑器编好文章，那么就可以生成以及部署了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github（1）</title>
    <link href="http://nsleep.github.io/2018/0401/Hexo-Github-1/"/>
    <id>http://nsleep.github.io/2018/0401/Hexo-Github-1/</id>
    <published>2018-04-01T13:46:52.000Z</published>
    <updated>2019-02-20T07:17:45.653Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、Github账户"><a href="#1、Github账户" class="headerlink" title="1、Github账户"></a>1、Github账户</h2><p>注册并新建项目，项目必须要遵守格式：账户名.github.io</p><h2 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></h2><h3 id="配置好Git环境"><a href="#配置好Git环境" class="headerlink" title="配置好Git环境"></a>配置好Git环境</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">git config --global user.email <span class="string">"your_email"</span></span><br></pre></td></tr></table></figure></div><a id="more"></a><h3 id="创建ssh密钥，将公钥上传"><a href="#创建ssh密钥，将公钥上传" class="headerlink" title="创建ssh密钥，将公钥上传"></a>创建ssh密钥，将公钥上传</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email"</span> </span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span>  //添加密钥到ssh-agent ,似乎非必要</span><br><span class="line">ssh -T git@github.com  //测试添加ssh是否成功</span><br></pre></td></tr></table></figure></div><h2 id="3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面"><a href="#3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面" class="headerlink" title="3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面"></a>3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面</h2><h2 id="4、安装Node-js"><a href="#4、安装Node-js" class="headerlink" title="4、安装Node.js"></a>4、安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h2><h3 id="并配置好Node-js环境"><a href="#并配置好Node-js环境" class="headerlink" title="并配置好Node.js环境"></a>并配置好Node.js环境</h3><h2 id="5、安装Hexo"><a href="#5、安装Hexo" class="headerlink" title="5、安装Hexo"></a>5、安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br><span class="line">hexo -v //检查hexo是否安装成功</span><br></pre></td></tr></table></figure></div><h2 id="6、初始化该文件夹"><a href="#6、初始化该文件夹" class="headerlink" title="6、初始化该文件夹"></a>6、初始化该文件夹</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></div><h2 id="7、安装所需要的组件"><a href="#7、安装所需要的组件" class="headerlink" title="7、安装所需要的组件"></a>7、安装所需要的组件</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></div><h2 id="8、Hexo生成静态文件–public文件夹下"><a href="#8、Hexo生成静态文件–public文件夹下" class="headerlink" title="8、Hexo生成静态文件–public文件夹下"></a>8、Hexo生成静态文件–public文件夹下</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></div><h2 id="9、开启本地服务"><a href="#9、开启本地服务" class="headerlink" title="9、开启本地服务"></a>9、开启本地服务</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></div><h2 id="10、改变端口号"><a href="#10、改变端口号" class="headerlink" title="*10、改变端口号"></a>*10、改变端口号</h2><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 端口号</span><br></pre></td></tr></table></figure></div><h2 id="11、修改-config-yml文件"><a href="#11、修改-config-yml文件" class="headerlink" title="11、修改_config.yml文件"></a>11、修改_config.yml文件</h2><p>修改repo值（在末尾）,注意：所有配置项目的分号后都需要一个空格<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: git@github.com:your_name/your_name.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></div></p><h2 id="12、生成及部署文章"><a href="#12、生成及部署文章" class="headerlink" title="12、生成及部署文章"></a>12、生成及部署文章</h2><p>生成以及部署文章之前，需要安装一个扩展<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div></p><p>在_posts目录下新建一篇博客，编辑器编好文章，那么就可以生成以及部署了<br><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span></span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></div></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、Github账户&quot;&gt;&lt;a href=&quot;#1、Github账户&quot; class=&quot;headerlink&quot; title=&quot;1、Github账户&quot;&gt;&lt;/a&gt;1、Github账户&lt;/h2&gt;&lt;p&gt;注册并新建项目，项目必须要遵守格式：账户名.github.io&lt;/p&gt;
&lt;h2 id=&quot;2、安装Git&quot;&gt;&lt;a href=&quot;#2、安装Git&quot; class=&quot;headerlink&quot; title=&quot;2、安装Git&quot;&gt;&lt;/a&gt;2、安装&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;配置好Git环境&quot;&gt;&lt;a href=&quot;#配置好Git环境&quot; class=&quot;headerlink&quot; title=&quot;配置好Git环境&quot;&gt;&lt;/a&gt;配置好Git环境&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;your_name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;your_email&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://nsleep.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
