<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo-search配置</title>
      <link href="/2019/0324/Hexo-search%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/0324/Hexo-search%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">官方文档</a></p><hr><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>修改在根目录下的_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml </span><br><span class="line">  field: all </span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure></p><ul><li>path - 文件的路径。默认是 search.xml。如果文件扩展名为 .json,则输出格式为JSON。</li><li>field - 要搜索的搜索范围：</li><li>post (Default) -  仅涵盖您博客的所有帖子。</li><li>page - 仅涵盖您博客的所有页面。</li><li>all - 将涵盖您博客的所有帖子和页面。</li><li>content - 是否包含每篇文章的全部内容。如果false，生成的结果仅覆盖没有主体的标题和其他元信息。默认是true。</li></ul><hr><h1 id="排除索引"><a href="#排除索引" class="headerlink" title="排除索引"></a>排除索引</h1><p>在文章顶部配置里加入 indexing: false </p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/2019/0324/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2019/0324/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><h2 id="1-常见的排序算法："><a href="#1-常见的排序算法：" class="headerlink" title="1. 常见的排序算法："></a>1. 常见的排序算法：</h2><p>冒泡排序、快速排序、简单插入排序、希尔排序、简单选择排序、堆排序、二路归并排序、多路归并排序、计数排序、桶排序、基数排序等<br><a id="more"></a><br><img src="排序算法概览.png" alt="常见的排序算法"></p><h2 id="2-算法复杂度："><a href="#2-算法复杂度：" class="headerlink" title="2. 算法复杂度："></a>2. 算法复杂度：</h2><p><img src="算法复杂度.png" alt="算法复杂度"></p><h2 id="3-相关概念："><a href="#3-相关概念：" class="headerlink" title="3. 相关概念："></a>3. 相关概念：</h2><ul><li>稳定：两个相等的数，排序后顺序不变</li><li>不稳定：两个相等的数，排序后顺序可能会变</li><li>时间复杂度：对排序数据的总的操作次数</li><li>空间复杂度：指计算机内执行时所需存储空间的度量</li></ul><h1 id="二、排序算法"><a href="#二、排序算法" class="headerlink" title="二、排序算法"></a>二、排序算法</h1><h2 id="1、冒泡排序"><a href="#1、冒泡排序" class="headerlink" title="1、冒泡排序"></a>1、冒泡排序</h2><p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。</p><h3 id="1-1-算法描述"><a href="#1-1-算法描述" class="headerlink" title="1.1 算法描述"></a>1.1 算法描述</h3><ul><li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li><li>针对所有的元素重复以上的步骤，除了最后一个；</li><li>重复步骤1~3，直到排序完成。<h3 id="1-2-动图演示"><a href="#1-2-动图演示" class="headerlink" title="1.2 动图演示"></a>1.2 动图演示</h3><img src="1.2演示.gif" alt=""><h3 id="1-3-代码实现"><a href="#1-3-代码实现" class="headerlink" title="1.3 代码实现"></a>1.3 代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> bubbleSort(arr) &#123;</span><br><span class="line">    var len = arr.length;</span><br><span class="line">    <span class="keyword">for</span> (var i = 0; i &lt; len - 1; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (var j = 0; j &lt; len - 1 - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+1]) &#123;        // 相邻元素两两对比</span><br><span class="line">                var temp = arr[j+1];        // 元素交换</span><br><span class="line">                arr[j+1] = arr[j];</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="2、选择排序"><a href="#2、选择排序" class="headerlink" title="2、选择排序"></a>2、选择排序</h2><p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p><h3 id="2-1-算法描述"><a href="#2-1-算法描述" class="headerlink" title="2.1 算法描述"></a>2.1 算法描述</h3><p>n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：</p><ul><li>初始状态：无序区为R[1..n]，有序区为空；</li><li>第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</li><li>n-1趟结束，数组有序化了。<h3 id="2-2-动图演示"><a href="#2-2-动图演示" class="headerlink" title="2.2 动图演示"></a>2.2 动图演示</h3><img src="2.2演示.gif" alt=""><h3 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> selectionSort(arr) &#123;</span><br><span class="line">    var len = arr.length;</span><br><span class="line">    var minIndex, temp;</span><br><span class="line">    <span class="keyword">for</span> (var i = 0; i &lt; len - 1; i++) &#123;</span><br><span class="line">        minIndex = i;</span><br><span class="line">        <span class="keyword">for</span> (var j = i + 1; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[minIndex]) &#123;     // 寻找最小的数</span><br><span class="line">                minIndex = j;                 // 将最小数的索引保存</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = arr[i];</span><br><span class="line">        arr[i] = arr[minIndex];</span><br><span class="line">        arr[minIndex] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-4-算法分析"><a href="#2-4-算法分析" class="headerlink" title="2.4 算法分析"></a>2.4 算法分析</h3><p>表现最稳定的排序算法之一，因为无论什么数据进去都是O(n^2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SS加速</title>
      <link href="/2019/0324/SS%E5%8A%A0%E9%80%9F/"/>
      <url>/2019/0324/SS%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="ss加速"><a href="#ss加速" class="headerlink" title="ss加速"></a>ss加速</h1><h2 id="bbr-加速下载"><a href="#bbr-加速下载" class="headerlink" title="bbr 加速下载"></a>bbr 加速下载</h2><p>参考文章：<a href="https://teddysun.com/489.html" target="_blank" rel="noopener">秋水逸冰 - 一键安装最新内核并开启 BBR 脚本</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h2 id="锐速ServerSpeeder"><a href="#锐速ServerSpeeder" class="headerlink" title="锐速ServerSpeeder"></a>锐速ServerSpeeder</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh</span><br><span class="line">$ bash serverspeeder.sh</span><br></pre></td></tr></table></figure><hr><p><strong>PS:</strong> <a href="https://www.moerats.com/archives/387/" target="_blank" rel="noopener">BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> VPN架设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django初步</title>
      <link href="/2019/0224/Django%E5%88%9D%E6%AD%A5/"/>
      <url>/2019/0224/Django%E5%88%9D%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>正在学习<a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a>中…<br><a id="more"></a><br><a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a> 是一个高级Python Web框架，鼓励快速开发和干净，实用的设计。由经验丰富的开发人员构建，它解决了Web开发的大部分麻烦，因此您可以专注于编写应用程序而无需重新发明轮子。它是免费和开源的。</p></blockquote><p>参考文档：<br>&emsp;&emsp;<a href="https://docs.djangoproject.com/zh-hans/2.1/" target="_blank" rel="noopener">Django 文档</a><br>&emsp;&emsp;<a href="https://docs.djangoproject.com/zh-hans/2.1/intro/" target="_blank" rel="noopener">Django 教程</a><br>&emsp;&emsp;<a href="https://www.cnblogs.com/zhangxinqi/p/8969006.html" target="_blank" rel="noopener">python3之Django基础篇</a><br>&emsp;&emsp;<a href="http://www.runoob.com/django/django-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/0830/hello-world/"/>
      <url>/2018/0830/hello-world/</url>
      
        <content type="html"><![CDATA[<ul><li>19/02/13 更新：翻译此篇例文</li></ul><hr><p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>!这是你的第一篇文章。查看<a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a>以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除</a>中找到答案，或者您可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上询问我。</p><a id="more"></a><h2 id="1-快速开始"><a href="#1-快速开始" class="headerlink" title="1 快速开始"></a>1 快速开始</h2><h3 id="1-1-创建一个新帖子"><a href="#1-1-创建一个新帖子" class="headerlink" title="1.1 创建一个新帖子"></a>1.1 创建一个新帖子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="1-2-运行服务器"><a href="#1-2-运行服务器" class="headerlink" title="1.2 运行服务器"></a>1.2 运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="1-3-生成静态文件"><a href="#1-3-生成静态文件" class="headerlink" title="1.3 生成静态文件"></a>1.3 生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="1-4-部署到远程站点"><a href="#1-4-部署到远程站点" class="headerlink" title="1.4 部署到远程站点"></a>1.4 部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 扉页 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Github-绑定域名</title>
      <link href="/2018/0730/Hexo-Github-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
      <url>/2018/0730/Hexo-Github-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="1-获取GitHub-Pages的IP"><a href="#1-获取GitHub-Pages的IP" class="headerlink" title="1. 获取GitHub Pages的IP"></a>1. 获取GitHub Pages的IP</h2><p>Ping出Github Pages的IP </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ping YOURNAME.github.io</span><br></pre></td></tr></table></figure><h2 id="2-配置域名"><a href="#2-配置域名" class="headerlink" title="2. 配置域名"></a>2. 配置域名</h2><p>在目录 YOURNAME\source 下添加一个名为CNAME的文件，文件的内容就是你的域名。</p><h2 id="3-域名解析"><a href="#3-域名解析" class="headerlink" title="3. 域名解析"></a>3. 域名解析</h2><p>修改的时候只要修改两个记录类型为A，主机记录分别为@和www的行就可以了<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Github-备份</title>
      <link href="/2018/0722/Hexo-Github-%E5%A4%87%E4%BB%BD/"/>
      <url>/2018/0722/Hexo-Github-%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<p>咱用Hexo+GitHub搭建Blog后想要进行备份，方法之一就是通过创建分支把源码放到GitHub上。</p><h1 id="一、-咱要备份哪些文件捏？"><a href="#一、-咱要备份哪些文件捏？" class="headerlink" title="一、 咱要备份哪些文件捏？"></a>一、 咱要备份哪些文件捏？</h1><h2 id="1、-文章"><a href="#1、-文章" class="headerlink" title="1、 文章"></a>1、 文章</h2><p>./source 文件夹，这个就不用说了，这里面包含了你写的文章的 markdown 源码，这个是最重要的。</p><h2 id="2、-配置文件"><a href="#2、-配置文件" class="headerlink" title="2、 配置文件"></a>2、 配置文件</h2><p>根目录下的几个配置文件，主要是 _config.yml、 package.json、 .gitignore。<br><a id="more"></a></p><h2 id="3、-主题文件夹"><a href="#3、-主题文件夹" class="headerlink" title="3、 主题文件夹"></a>3、 主题文件夹</h2><p>./themes/themes_name 这里的 themes_name 指的是你的主题名称， 如果咱对主题进行了一些个性化的配置， 那么这个主题也最好全部备份。</p><h2 id="4、-模版"><a href="#4、-模版" class="headerlink" title="4、 模版"></a>4、 模版</h2><p>./scaffolds 文件夹， 这个文件夹里是创建文    章时的模板， 如果没修改过这个文件夹中的东西， 可以不用备份。</p><h2 id="5、-密钥"><a href="#5、-密钥" class="headerlink" title="5、 密钥"></a>5、 密钥</h2><p>.ssh， 咱认为没必要备份，直接放到GitHub不安全，大不了重新生成嘛。</p><h1 id="二、-备份到哪？"><a href="#二、-备份到哪？" class="headerlink" title="二、 备份到哪？"></a>二、 备份到哪？</h1><p>创建GitHub Pages 时咱创建了两个分支：master 与 hexo</p><ul><li>master 分支用来存放生成的静态网页</li><li>hexo 分支用来存放网站的原始文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git status</span><br><span class="line">$ git commit -m <span class="string">'...'</span></span><br><span class="line">$ git push --<span class="built_in">set</span>-upstream origin hexo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 另附：</span></span><br><span class="line">$ git branch -a <span class="comment"># 查看远程分支</span></span><br><span class="line">$ git branch <span class="comment"># 查看本地分支</span></span><br><span class="line">$ git checkout master <span class="comment"># 切换分支</span></span><br></pre></td></tr></table></figure><h1 id="三、-那么怎么去备份捏？"><a href="#三、-那么怎么去备份捏？" class="headerlink" title="三、 那么怎么去备份捏？"></a>三、 那么怎么去备份捏？</h1><p>创建GitHub Pages 时创建两个分支：master 与 hexo<br>设置hexo 为默认分支，修改_config.yml中的deploy参数， 分支应为master；<br>依次执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add . </span><br><span class="line">$ git commit -m “…”</span><br><span class="line">$ git push –<span class="built_in">set</span>-upstream origin hexo</span><br></pre></td></tr></table></figure></p><p>提交原始文件到Hexo</p><h1 id="四、-修改日常！"><a href="#四、-修改日常！" class="headerlink" title="四、 修改日常！"></a>四、 修改日常！</h1><p>依次执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">'...'</span></span><br><span class="line">$ git push origin hexo</span><br></pre></td></tr></table></figure></p><p>指令将改动推送到GitHub（此时当前分支应为hexo）；<br>然后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></p><p>会发布网站到master分支上。另外，两个过程顺序调转一般不会有问题。</p><h1 id="五、-那么怎么恢复编辑文件捏？"><a href="#五、-那么怎么恢复编辑文件捏？" class="headerlink" title="五、 那么怎么恢复编辑文件捏？"></a>五、 那么怎么恢复编辑文件捏？</h1><pre><code>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b hexo git@github.com:YOURNAME/YOURNAME.github.io.git</span><br><span class="line"><span class="comment"># 在本地新拷贝的YOURNAME.github.io文件夹下通过Git bash依次执行下列指令：</span></span><br><span class="line">$ npm install hexo</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br><span class="line">（记得，不需要hexo init这条指令）。</span><br></pre></td></tr></table></figure><h1 id="六、-参考文档："><a href="#六、-参考文档：" class="headerlink" title="六、 参考文档："></a>六、 参考文档：</h1><pre><code>(GitHub Pages + Hexo搭建博客)[http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more][使用hexo，如果换了电脑怎么更新博客？(知乎)](https://www.zhihu.com/question/21193762)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器管理面板</title>
      <link href="/2018/0623/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/"/>
      <url>/2018/0623/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="免费-Linux-服务器管理面板"><a href="#免费-Linux-服务器管理面板" class="headerlink" title="免费 Linux 服务器管理面板"></a>免费 Linux 服务器管理面板</h1><hr><h2 id="1-宝塔面板"><a href="#1-宝塔面板" class="headerlink" title="1.宝塔面板"></a>1.<a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔面板</a></h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1).下载"></a>1).下载</h3><ul><li>Linux版<a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">下载</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>Window版<a href="http://download.bt.cn/win/update/net/BtSoft-Win.zip" target="_blank" rel="noopener">下载</a>：<br><a href="http://download.bt.cn/win/update/net/BtSoft-Win.zip" target="_blank" rel="noopener">http://download.bt.cn/win/update/net/BtSoft-Win.zip</a></li></ul><h3 id="2-卸载"><a href="#2-卸载" class="headerlink" title="2).卸载"></a>2).卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</span><br></pre></td></tr></table></figure><hr><h2 id="2-AMH面板"><a href="#2-AMH面板" class="headerlink" title="2.AMH面板"></a>2.<a href="http://amh.sh/install.htm" target="_blank" rel="noopener">AMH面板</a></h2><p>国内、半开源、有收费版本、中文</p><h3 id="1-下载-1"><a href="#1-下载-1" class="headerlink" title="1).下载"></a>1).下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://amh.sh/amh.sh &amp;&amp; bash amh.sh 2&gt;&amp;1 | tee amh.log</span><br></pre></td></tr></table></figure><h3 id="2-卸载-1"><a href="#2-卸载-1" class="headerlink" title="2).卸载"></a>2).卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">killall php-fpm</span><br><span class="line">amh nginx stop</span><br><span class="line">amh mysql stop</span><br><span class="line"></span><br><span class="line">rm /root/amh -rf;</span><br><span class="line">rm /home/usrdata /home/wwwroot -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/amh* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/libiconv* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/nginx* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/mysql* -rf;</span><br><span class="line">rm /usr/<span class="built_in">local</span>/php* -rf;</span><br><span class="line">rm /etc/init.d/amh-start /etc/amh-iptables /bin/amh -f;</span><br></pre></td></tr></table></figure><hr><h2 id="3-WDCP面板"><a href="#3-WDCP面板" class="headerlink" title="3.WDCP面板"></a>3.<a href="https://www.wdlinux.cn/lanmp/install.html" target="_blank" rel="noopener">WDCP面板</a></h2><p>国内、闭源、免费、中文</p><h3 id="1-下载-2"><a href="#1-下载-2" class="headerlink" title="1).下载"></a>1).下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://dl.wdlinux.cn:5180/lanmp_laster.tar.gz</span><br><span class="line">$ tar zxvf lanmp_laster.tar.gz</span><br><span class="line">$ sh install.sh    (或sh in.sh) (默认会安装wdcp,如果只要web环境,而不想安装wdcp,这里改为 sh lanmp.sh即可)</span><br></pre></td></tr></table></figure><h3 id="2-卸载-2"><a href="#2-卸载-2" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>(注意备份数据,否则后果自负)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh install.sh uninstall    (或sh in.sh uninstall)</span><br></pre></td></tr></table></figure><hr><h2 id="4-VestaCP面板"><a href="#4-VestaCP面板" class="headerlink" title="4.VestaCP面板"></a>4.<a href="http://www.vestacp.com/install/" target="_blank" rel="noopener">VestaCP面板</a></h2><h3 id="1-下载-3"><a href="#1-下载-3" class="headerlink" title="1).下载"></a>1).下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O http://vestacp.com/pub/vst-install.sh &amp;&amp; bash vst-install.sh</span><br></pre></td></tr></table></figure><h3 id="2-卸载-3"><a href="#2-卸载-3" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>a.停止VESTA服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service vesta stop</span><br></pre></td></tr></table></figure><p>b.卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CentOS:</span><br><span class="line">$ yum remove vesta*</span><br><span class="line">$ rm -f /etc/yum.repos.d/vesta.repo</span><br><span class="line"></span><br><span class="line">Debian/Ubuntu:</span><br><span class="line">$ apt-get remove vesta*</span><br><span class="line">$ rm -f /etc/apt/sources.list.d/vesta.list</span><br></pre></td></tr></table></figure><p>c. 删除数据目录和计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/vesta</span><br></pre></td></tr></table></figure><hr><h2 id="5-AppNode面板"><a href="#5-AppNode面板" class="headerlink" title="5.AppNode面板"></a>5.<a href="https://www.appnode.com/install" target="_blank" rel="noopener">AppNode面板</a></h2><h3 id="1-下载-4"><a href="#1-下载-4" class="headerlink" title="1).下载"></a>1).下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ INSTALL_AGENT=1 INSTALL_APPS=sitemgr INIT_SWAPFILE=1 INSTALL_PKGS=<span class="string">'nginx-stable,php56,mysql56'</span> bash -c <span class="string">"<span class="variable">$(curl -sS http://dl.appnode.com/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="2-卸载-4"><a href="#2-卸载-4" class="headerlink" title="2).卸载"></a>2).卸载</h3><p>a.卸载受控端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appnode agent remove</span><br></pre></td></tr></table></figure><p>b.卸载控制中心</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appnode ccenter remove</span><br></pre></td></tr></table></figure><p>c.清除残留数据和配置<br>如果要彻底清除卸载后的残留数据和配置文件，删除三个目录即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /opt/appnode/&#123;ccenter,agent,ui&#125;/</span><br></pre></td></tr></table></figure><pre><code>注意：由面板安装的环境软件，不会被自动卸载</code></pre><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器管理 </tag>
            
            <tag> Web 网站架设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN的简单架设</title>
      <link href="/2018/0623/VPN%E7%9A%84%E7%AE%80%E5%8D%95%E6%9E%B6%E8%AE%BE/"/>
      <url>/2018/0623/VPN%E7%9A%84%E7%AE%80%E5%8D%95%E6%9E%B6%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>提要：<br>      系统：CentOS 6.9</p></blockquote><h1 id="下载shadowsocks服务端"><a href="#下载shadowsocks服务端" class="headerlink" title="下载shadowsocks服务端"></a>下载shadowsocks服务端</h1><p>参考文章：<a href="https://teddysun.com/486.html" target="_blank" rel="noopener">秋水逸冰 - Shadowsocks 一键安装脚本（四合一）</a></p><p>使用root用户登录，运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh &amp;&amp; chmod +x shadowsocks-all.sh &amp;&amp; ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></figure></p><a id="more"></a><hr><h1 id="安装Win-ss客户端"><a href="#安装Win-ss客户端" class="headerlink" title="安装Win ss客户端"></a>安装Win ss客户端</h1><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">常规版 Shadowsocks</a> </p><p><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases" target="_blank" rel="noopener">ShadowsocksR 版</a> </p><hr><h2 id="卸载方法"><a href="#卸载方法" class="headerlink" title="卸载方法"></a>卸载方法</h2><p>若已安装多个版本，则卸载时也需多次运行</p><p>使用root用户登录，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-all.sh uninstall</span><br></pre></td></tr></table></figure><h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><p>Shadowsocks-Python 版：<br>/etc/init.d/shadowsocks-python start | stop | restart | status</p><p>ShadowsocksR 版：<br>/etc/init.d/shadowsocks-r start | stop | restart | status</p><p>Shadowsocks-Go 版：<br>/etc/init.d/shadowsocks-go start | stop | restart | status</p><p>Shadowsocks-libev 版：<br>/etc/init.d/shadowsocks-libev start | stop | restart | status</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>Shadowsocks-Python 版：<br>/etc/shadowsocks-python/config.json</p><p>ShadowsocksR 版：<br>/etc/shadowsocks-r/config.json</p><p>Shadowsocks-Go 版：<br>/etc/shadowsocks-go/config.json</p><p>Shadowsocks-libev 版：<br>/etc/shadowsocks-libev/config.json</p><hr><p><strong>PS:</strong> <a href="https://do.freess.today/" target="_blank" rel="noopener">Free SS</a></p><ul><li>19/3/24：更新;另作SS加速</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> VPN架设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器安防之登陆次数限制</title>
      <link href="/2018/0517/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8B%E7%99%BB%E9%99%86%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/"/>
      <url>/2018/0517/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8B%E7%99%BB%E9%99%86%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="记"><a href="#记" class="headerlink" title="记"></a>记</h1><p>继上次爆破防御后，依然有陌生IP骚扰，百无聊赖，续作此篇；</p><hr><h1 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h1><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></p><a id="more"></a><hr><h1 id="1-始终允许IP"><a href="#1-始终允许IP" class="headerlink" title="1. 始终允许IP"></a>1. 始终允许IP</h1><p>假设IP：192.168.18.1 是经常登录的IP，填入 /etc/hosts.allow ，当然 :allow 是可以省略的。当hosts.allow和host.deny相冲突时, 以hosts.allow设置为准</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:192.168.18.1:allow"</span> &gt;&gt; /etc/hosts.allow</span><br></pre></td></tr></table></figure><hr><h1 id="2-写脚本"><a href="#2-写脚本" class="headerlink" title="2. 写脚本"></a>2. 写脚本</h1><p>在路径 ‘/usr/local/bin/‘ 下，创建文件 ‘secure_ssh.sh’ ，<br>错误次数大于个位数，即错误次数大于等于10就将IP列入黑名单(判断见行7)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/secure|awk <span class="string">'/Failed/&#123;print $(NF-3)&#125;'</span>|sort|uniq -c|awk <span class="string">'&#123;print $2"="$1;&#125;'</span> &gt; /usr/<span class="built_in">local</span>/bin/black.list</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat  /usr/<span class="built_in">local</span>/bin/black.list`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  IP=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">  NUM=`<span class="built_in">echo</span> <span class="variable">$i</span> |awk -F= <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;#NUM&#125;</span> -gt 1 ]; <span class="keyword">then</span></span><br><span class="line">    grep <span class="variable">$IP</span> /etc/hosts.deny &gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -gt 0 ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"sshd:<span class="variable">$IP</span>:deny"</span> &gt;&gt; /etc/hosts.deny</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><hr><h1 id="3-列入计划"><a href="#3-列入计划" class="headerlink" title="3. 列入计划"></a>3. 列入计划</h1><p>将脚本文件每一分钟执行一次 (<em> /1 </em> <em> </em> * )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  /1 * * * *  sh /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br><span class="line">或</span><br><span class="line">  * * * * *  sh /usr/<span class="built_in">local</span>/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure><h1 id="4-后记"><a href="#4-后记" class="headerlink" title="4. 后记"></a>4. 后记</h1><h2 id="1-查看记录列表"><a href="#1-查看记录列表" class="headerlink" title="1).查看记录列表"></a>1).查看记录列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /usr/<span class="built_in">local</span>/bin/black.list</span><br></pre></td></tr></table></figure><h2 id="2-清空记录列表"><a href="#2-清空记录列表" class="headerlink" title="2).清空记录列表"></a>2).清空记录列表</h2><p>black.list文件是根据secure日志文件通过上面脚本文件生成的，且每分钟会覆盖一次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;&quot; &gt; /var/log/secure </span><br><span class="line">$ echo &quot;&quot; &gt; /usr/local/bin/black.list</span><br></pre></td></tr></table></figure><h2 id="3-修改hosts-deny文件"><a href="#3-修改hosts-deny文件" class="headerlink" title="3).修改hosts.deny文件"></a>3).修改hosts.deny文件</h2><p>手动添加或删除IP记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/hosts.deny</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器安防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器安防之VPS爆破防御（简）</title>
      <link href="/2018/0505/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8BVPS%E7%88%86%E7%A0%B4%E9%98%B2%E5%BE%A1%EF%BC%88%E7%AE%80%EF%BC%89/"/>
      <url>/2018/0505/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E9%98%B2%E4%B9%8BVPS%E7%88%86%E7%A0%B4%E9%98%B2%E5%BE%A1%EF%BC%88%E7%AE%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查看登录失败的IP"><a href="#查看登录失败的IP" class="headerlink" title="查看登录失败的IP"></a>查看登录失败的IP</h2><p>显示错误次数 如果错误次数太大 你的服务器十有八九曾被暴力破解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"Failed password for root"</span> /var/<span class="built_in">log</span>/secure | awk <span class="string">'&#123;print $11&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></p><a id="more"></a><p><img src="Failed login.png" alt="Failed login"></p><hr><h2 id="列出用户所有的登录时间和登录终端的地址"><a href="#列出用户所有的登录时间和登录终端的地址" class="headerlink" title="列出用户所有的登录时间和登录终端的地址"></a>列出用户所有的登录时间和登录终端的地址</h2><p>为了验证是否被入侵，可以先查看现在谁在登录服务器，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last | more</span><br></pre></td></tr></table></figure></p><p>显示系统中所有用户最近一次登录信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lastlog</span><br></pre></td></tr></table></figure></p><hr><h2 id="加入到黑名单"><a href="#加入到黑名单" class="headerlink" title="加入到黑名单"></a>加入到黑名单</h2><p>把对方IP加入到黑名单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts.deny</span><br><span class="line">$ /etc/hosts.deny</span><br></pre></td></tr></table></figure></p><hr><h2 id="禁止所有IP访问SSH功能"><a href="#禁止所有IP访问SSH功能" class="headerlink" title="禁止所有IP访问SSH功能"></a>禁止所有IP访问SSH功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"sshd:all:deny"</span> &gt;&gt; /etc/hosts.deny</span><br></pre></td></tr></table></figure><hr><h2 id="（自行决定）"><a href="#（自行决定）" class="headerlink" title="（自行决定）"></a>（自行决定）</h2><h2 id="更改端口号"><a href="#更改端口号" class="headerlink" title="更改端口号"></a>更改端口号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Port 22</span></span><br></pre></td></tr></table></figure><h2 id="禁止root-ssh登录"><a href="#禁止root-ssh登录" class="headerlink" title="禁止root ssh登录"></a>禁止root ssh登录</h2><p>暴力破解骇客首先会尝试root 用户，可以,修改sshd_conf文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#PermitRootLogin no</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器安防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github（3）</title>
      <link href="/2018/0401/Hexo-Github-3/"/>
      <url>/2018/0401/Hexo-Github-3/</url>
      
        <content type="html"><![CDATA[<h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><h2 id="17、迁移方法"><a href="#17、迁移方法" class="headerlink" title="17、迁移方法"></a>17、迁移方法</h2><h3 id="1-RSS"><a href="#1-RSS" class="headerlink" title="(1)RSS"></a>(1)RSS</h3><p>安装hexo-migrator-rss 插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure></p><p>执行 (<source> 文件路径或网址)</p><pre><code class="bash">hexo migrate rss &lt;<span class="built_in">source</span>&gt;</code></pre><a id="more"></a><h3 id="2-Jekyll"><a href="#2-Jekyll" class="headerlink" title="(2)Jekyll"></a>(2)Jekyll</h3><p>把_post文件夹下的所有文件复制到source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md  </code></pre><h3 id="3-Octopress"><a href="#3-Octopress" class="headerlink" title="(3)Octopress"></a>(3)Octopress</h3><p>把source/_post文件夹下的所有文件复制到Hexo的source/_post文件夹，并修改new_post_name参数</p><pre><code>new_post_name: :year-:month-:day-:title.md</code></pre><h3 id="4-WordPress"><a href="#4-WordPress" class="headerlink" title="(4)WordPress"></a>(4)WordPress</h3><p>安装 hexo-migeator-wordpress 插件</p><pre><code>npm install hexo-migeator-wordpress --save</code></pre><p>从WP导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate wordpress &lt;source&gt;</code></pre><h3 id="5-Joomla"><a href="#5-Joomla" class="headerlink" title="(5)Joomla"></a>(5)Joomla</h3><p>安装 hexo-migeator-joomla插件</p><pre><code>npm install hexo-migeator-joomla --save</code></pre><p>用J2XML组件导出数据，而后执行 (<source> 文件路径或网址)</p><pre><code>hexo migrate joomla&lt;source&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github（2）</title>
      <link href="/2018/0401/Hexo-Github-2/"/>
      <url>/2018/0401/Hexo-Github-2/</url>
      
        <content type="html"><![CDATA[<h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span>//新建一篇博客--_posts目录下</span><br><span class="line">hexo d -g//编辑器编好文章，那么就可以生成以及部署了</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo generate--&gt;  hexo g//生成静态文件</span><br><span class="line">hexo deploy--&gt;  hexo d//文件生成后立即部署网站</span><br><span class="line">hexo watch--&gt;  hexo w//监视文件变动</span><br><span class="line">hexo publish [layout] &lt;Filename&gt; //发表草稿</span><br><span class="line">hexo server //启动服务器</span><br><span class="line">hexo port--&gt;  hexo p//重设端口</span><br><span class="line">hexo static--&gt;  hexo s//只使用静态文件</span><br><span class="line">hexo <span class="built_in">log</span>--&gt;  hexo l//启动日志</span><br><span class="line">hexo render &lt;file1&gt;[file2]...//渲染文件</span><br><span class="line">hexo migrate &lt;<span class="built_in">type</span>&gt;//从其他博客迁移</span><br><span class="line">hexo clean--&gt;  hexo c//清除缓存文件db.json和文件夹public</span><br><span class="line">hexo list &lt;<span class="built_in">type</span>&gt;//列出网站资料</span><br><span class="line">hexo version//显示版本</span><br><span class="line">hexo safe//安全模式 不载入插件和脚本</span><br><span class="line">hexo debug//调试模式 显示调试信息记录在debug.log中</span><br><span class="line">hexo silent//简洁模式 隐藏终端信息</span><br><span class="line">hexo config custom.yml//自定义配置文件的路径</span><br><span class="line">hexo draft//显示<span class="built_in">source</span>/_drafts 文件夹中的草稿</span><br><span class="line">hexo cwd /path/to/cwd//自定义当前工作目录的路径</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github（1）</title>
      <link href="/2018/0401/Hexo-Github-1/"/>
      <url>/2018/0401/Hexo-Github-1/</url>
      
        <content type="html"><![CDATA[<h2 id="1、Github账户"><a href="#1、Github账户" class="headerlink" title="1、Github账户"></a>1、Github账户</h2><p>注册并新建项目，项目必须要遵守格式：账户名.github.io</p><h2 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></h2><h3 id="配置好Git环境"><a href="#配置好Git环境" class="headerlink" title="配置好Git环境"></a>配置好Git环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">git config --global user.email <span class="string">"your_email"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="创建ssh密钥，将公钥上传"><a href="#创建ssh密钥，将公钥上传" class="headerlink" title="创建ssh密钥，将公钥上传"></a>创建ssh密钥，将公钥上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email"</span> </span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span>  //添加密钥到ssh-agent ,似乎非必要</span><br><span class="line">ssh -T git@github.com  //测试添加ssh是否成功</span><br></pre></td></tr></table></figure><h2 id="3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面"><a href="#3、创建一个文件夹，然后通过命令行或Git-Bash进入到该文件夹里面" class="headerlink" title="3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面"></a>3、创建一个文件夹，然后通过命令行或Git Bash进入到该文件夹里面</h2><h2 id="4、安装Node-js"><a href="#4、安装Node-js" class="headerlink" title="4、安装Node.js"></a>4、安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h2><h3 id="并配置好Node-js环境"><a href="#并配置好Node-js环境" class="headerlink" title="并配置好Node.js环境"></a>并配置好Node.js环境</h3><h2 id="5、安装Hexo"><a href="#5、安装Hexo" class="headerlink" title="5、安装Hexo"></a>5、安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br><span class="line">hexo -v //检查hexo是否安装成功</span><br></pre></td></tr></table></figure><h2 id="6、初始化该文件夹"><a href="#6、初始化该文件夹" class="headerlink" title="6、初始化该文件夹"></a>6、初始化该文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="7、安装所需要的组件"><a href="#7、安装所需要的组件" class="headerlink" title="7、安装所需要的组件"></a>7、安装所需要的组件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="8、Hexo生成静态文件–public文件夹下"><a href="#8、Hexo生成静态文件–public文件夹下" class="headerlink" title="8、Hexo生成静态文件–public文件夹下"></a>8、Hexo生成静态文件–public文件夹下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="9、开启本地服务"><a href="#9、开启本地服务" class="headerlink" title="9、开启本地服务"></a>9、开启本地服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="10、改变端口号"><a href="#10、改变端口号" class="headerlink" title="*10、改变端口号"></a>*10、改变端口号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 端口号</span><br></pre></td></tr></table></figure><h2 id="11、修改-config-yml文件"><a href="#11、修改-config-yml文件" class="headerlink" title="11、修改_config.yml文件"></a>11、修改_config.yml文件</h2><p>修改repo值（在末尾）,注意：所有配置项目的分号后都需要一个空格<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: git@github.com:your_name/your_name.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p><h2 id="12、生成及部署文章"><a href="#12、生成及部署文章" class="headerlink" title="12、生成及部署文章"></a>12、生成及部署文章</h2><p>生成以及部署文章之前，需要安装一个扩展<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>在_posts目录下新建一篇博客，编辑器编好文章，那么就可以生成以及部署了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"博客名"</span></span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>欢迎来到我的个人技术博客。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/gitments/index.html"/>
      <url>/gitments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>读书</title>
      <link href="/reading/index.html"/>
      <url>/reading/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
